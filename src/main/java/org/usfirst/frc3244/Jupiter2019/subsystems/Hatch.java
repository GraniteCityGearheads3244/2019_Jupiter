// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.Jupiter2019.subsystems;


import org.usfirst.frc3244.Jupiter2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Hatch extends Subsystem {

   
    private DoubleSolenoid dBL_Sol_Hatch_Gripper;
    private DoubleSolenoid dBL_Sol_Hatch_Slide;

    public Hatch() {
        dBL_Sol_Hatch_Gripper = new DoubleSolenoid(0, 0, 1);
        addChild("DBL_Sol_Hatch_Gripper",dBL_Sol_Hatch_Gripper);
        
        
        dBL_Sol_Hatch_Slide = new DoubleSolenoid(0, 2, 3);
        addChild("DBL_Sol_Hatch_Slide",dBL_Sol_Hatch_Slide);
        
    }

    @Override
    public void initDefaultCommand() {
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void my_Hatch_Grip(boolean grip){
        if(grip){
            dBL_Sol_Hatch_Gripper.set(Value.kForward);
        }else{
            dBL_Sol_Hatch_Gripper.set(Value.kReverse);
        }
    }

    public void my_Hatch_Extend(boolean extend){
        if(extend){
            dBL_Sol_Hatch_Slide.set(Value.kForward);
        }else{
            dBL_Sol_Hatch_Slide.set(Value.kReverse);
        }
    }
}

